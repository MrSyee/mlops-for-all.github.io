<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API Deployment on</title><link>https://mlops-for-all.github.io/docs/api-deployment/</link><description>Recent content in API Deployment on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://mlops-for-all.github.io/docs/api-deployment/index.xml" rel="self" type="application/rss+xml"/><item><title>1. What is API Deployment?</title><link>https://mlops-for-all.github.io/docs/api-deployment/what-is-api-deployment/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/api-deployment/what-is-api-deployment/</guid><description>API Deployment 란? # 머신러닝 모델을 학습한 뒤에는 어떻게 사용해야 할까요?
머신러닝을 학습할 때에는 더 높은 성능의 모델이 나오기를 기대하지만, 학습된 모델을 사용하여 추론을 할 때에는 빠르고 쉽게 추론 결과를 받아보고 싶을 것입니다.
모델의 추론 결과를 확인하고자 할 때 주피터 노트북이나 파이썬 스크립트를 통해 학습된 모델을 로드한 뒤 추론할 수 있습니다.
그렇지만 이런 방법은 모델이 클수록 모델을 불러오는데 많은 시간을 소요하게 되어서 비효율적입니다. 또한 이렇게 이용하면 많은 사람들이 모델을 이용할 수 없고 학습된 모델이 있는 환경에서밖에 사용할 수 없습니다.</description></item><item><title>2. Deploy SeldonDeployment</title><link>https://mlops-for-all.github.io/docs/api-deployment/seldon-iris/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/api-deployment/seldon-iris/</guid><description>SeldonDeployment를 통해 배포하기 # 이번에는 학습된 모델이 있을 때 SeldonDeployment를 통해 API Deployment를 해보겠습니다. SeldonDeployment는 쿠버네티스(Kubernetes)에 모델을 REST/gRPC 서버의 형태로 배포하기 위해 정의된 CRD(CustomResourceDefinition)입니다.
1. Prerequisites # SeldonDeployment 관련된 실습은 seldon-deploy라는 새로운 네임스페이스(namespace)에서 진행하도록 하겠습니다. 네임스페이스를 생성한 뒤, seldon-deploy를 현재 네임스페이스로 설정합니다.
kubectl create namespace seldon-deploy kubectl config set-context --current --namespace=seldon-deploy 2. 스펙 정의 # SeldonDeployment를 배포하기 위한 yaml 파일을 생성합니다. 이번 페이지에서는 공개되어 있는 iris model을 사용하도록 하겠습니다. 이 iris model은 sklearn 프레임워크를 통해 학습되었기 때문에 SKLEARN_SERVER를 사용합니다.</description></item></channel></rss>